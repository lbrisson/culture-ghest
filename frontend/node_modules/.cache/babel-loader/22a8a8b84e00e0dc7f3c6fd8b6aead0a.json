{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Devices from './Devices';\nimport Volume from './Volume';\nimport { px, styled } from '../styles';\nvar Wrapper = styled('div')({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'flex-end',\n  paddingRight: px(10),\n  'pointer-events': 'none',\n  '> div + div': {\n    marginLeft: px(10)\n  },\n  '@media (max-width: 1023px)': {\n    bottom: 0,\n    position: 'absolute',\n    right: 0,\n    width: 'auto'\n  }\n}, function (_a) {\n  var style = _a.style;\n  return {\n    height: px(style.h)\n  };\n}, 'ActionsRSWP');\nexport default function Actions(props) {\n  var currentDeviceId = props.currentDeviceId,\n      deviceId = props.deviceId,\n      devices = props.devices,\n      isDevicesOpen = props.isDevicesOpen,\n      locale = props.locale,\n      onClickDevice = props.onClickDevice,\n      playerPosition = props.playerPosition,\n      setVolume = props.setVolume,\n      styles = props.styles,\n      volume = props.volume;\n  return _jsxs(Wrapper, __assign({\n    style: {\n      h: styles.height\n    }\n  }, {\n    children: [currentDeviceId && _jsx(Volume, {\n      playerPosition: playerPosition,\n      setVolume: setVolume,\n      styles: styles,\n      title: locale.volume,\n      volume: volume\n    }), _jsx(Devices, {\n      currentDeviceId: currentDeviceId,\n      deviceId: deviceId,\n      devices: devices,\n      onClickDevice: onClickDevice,\n      open: isDevicesOpen,\n      playerPosition: playerPosition,\n      styles: styles,\n      title: locale.devices\n    })]\n  }));\n}\n_c = Actions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Actions\");","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAASC,EAAT,EAAaC,MAAb,QAA2B,WAA3B;AAiBA,IAAMC,OAAO,GAAGD,MAAM,CAAC,KAAD,CAAN,CACd;EACEE,UAAU,EAAE,QADd;EAEEC,OAAO,EAAE,MAFX;EAGEC,cAAc,EAAE,UAHlB;EAIEC,YAAY,EAAEN,EAAE,CAAC,EAAD,CAJlB;EAKE,kBAAkB,MALpB;EAOE,eAAe;IACbO,UAAU,EAAEP,EAAE,CAAC,EAAD;EADD,CAPjB;EAWE,8BAA8B;IAC5BQ,MAAM,EAAE,CADoB;IAE5BC,QAAQ,EAAE,UAFkB;IAG5BC,KAAK,EAAE,CAHqB;IAI5BC,KAAK,EAAE;EAJqB;AAXhC,CADc,EAmBd,UAACC,EAAD,EAAuB;MAApBC,KAAK;EAAoB,OAAC;IAC3BC,MAAM,EAAEd,EAAE,CAACa,KAAK,CAACE,CAAP;EADiB,CAAD;AAE1B,CArBY,EAsBd,aAtBc,CAAhB;AAyBA,eAAc,SAAUC,OAAV,CAAkBC,KAAlB,EAA8B;EAExC,mBAAe,GAUbA,KAAK,gBAVP;EAAA,IACAC,QAAQ,GASND,KAAK,SAVP;EAAA,IAEAE,OAAO,GAQLF,KAAK,QAVP;EAAA,IAGAG,aAAa,GAOXH,KAAK,cAVP;EAAA,IAIAI,MAAM,GAMJJ,KAAK,OAVP;EAAA,IAKAK,aAAa,GAKXL,KAAK,cAVP;EAAA,IAMAM,cAAc,GAIZN,KAAK,eAVP;EAAA,IAOAO,SAAS,GAGPP,KAAK,UAVP;EAAA,IAQAQ,MAAM,GAEJR,KAAK,OAVP;EAAA,IASAS,MAAM,GACJT,KAAK,OAVP;EAYF,OACEU,MAACzB,OAAD,EAAQ0B;IAACf,KAAK,EAAE;MAAEE,CAAC,EAAEU,MAAM,CAACX;IAAZ;EAAR,GAA4B;IAAAe,WACjCC,eAAe,IACdC,KAAChC,MAAD,EAAO;MACLwB,cAAc,EAAEA,cADX;MAELC,SAAS,EAAEA,SAFN;MAGLC,MAAM,EAAEA,MAHH;MAILO,KAAK,EAAEX,MAAM,CAACK,MAJT;MAKLA,MAAM,EAAEA;IALH,CAAP,CAFgC,EAUlCK,KAACjC,OAAD,EAAQ;MACNgC,eAAe,EAAEA,eADX;MAENZ,QAAQ,EAAEA,QAFJ;MAGNC,OAAO,EAAEA,OAHH;MAING,aAAa,EAAEA,aAJT;MAKNW,IAAI,EAAEb,aALA;MAMNG,cAAc,EAAEA,cANV;MAONE,MAAM,EAAEA,MAPF;MAQNO,KAAK,EAAEX,MAAM,CAACF;IARR,CAAR,CAVkC;EAAA,CAA5B,CAAR,CADF;AAuBD;KArCuBH,O","names":["Devices","Volume","px","styled","Wrapper","alignItems","display","justifyContent","paddingRight","marginLeft","bottom","position","right","width","_a","style","height","h","Actions","props","deviceId","devices","isDevicesOpen","locale","onClickDevice","playerPosition","setVolume","styles","volume","_jsxs","__assign","children","currentDeviceId","_jsx","title","open"],"sources":["/Users/cedmarth/StudentWork/JS/apps/music-app/frontend/src/node_modules/react-spotify-web-playback/src/components/Actions.tsx"],"sourcesContent":["import Devices from './Devices';\nimport Volume from './Volume';\n\nimport { px, styled } from '../styles';\nimport { Locale, StyledProps, StylesOptions } from '../types/common';\nimport { SpotifyDevice } from '../types/spotify';\n\ninterface Props {\n  currentDeviceId: string;\n  deviceId: string;\n  devices: SpotifyDevice[];\n  isDevicesOpen: boolean;\n  locale: Locale;\n  onClickDevice: (deviceId: string) => any;\n  playerPosition: string;\n  setVolume: (volume: number) => any;\n  styles: StylesOptions;\n  volume: number;\n}\n\nconst Wrapper = styled('div')(\n  {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingRight: px(10),\n    'pointer-events': 'none',\n\n    '> div + div': {\n      marginLeft: px(10),\n    },\n\n    '@media (max-width: 1023px)': {\n      bottom: 0,\n      position: 'absolute',\n      right: 0,\n      width: 'auto',\n    },\n  },\n  ({ style }: StyledProps) => ({\n    height: px(style.h),\n  }),\n  'ActionsRSWP',\n);\n\nexport default function Actions(props: Props) {\n  const {\n    currentDeviceId,\n    deviceId,\n    devices,\n    isDevicesOpen,\n    locale,\n    onClickDevice,\n    playerPosition,\n    setVolume,\n    styles,\n    volume,\n  } = props;\n\n  return (\n    <Wrapper style={{ h: styles.height }}>\n      {currentDeviceId && (\n        <Volume\n          playerPosition={playerPosition}\n          setVolume={setVolume}\n          styles={styles}\n          title={locale.volume}\n          volume={volume}\n        />\n      )}\n      <Devices\n        currentDeviceId={currentDeviceId}\n        deviceId={deviceId}\n        devices={devices}\n        onClickDevice={onClickDevice}\n        open={isDevicesOpen}\n        playerPosition={playerPosition}\n        styles={styles}\n        title={locale.devices}\n      />\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}