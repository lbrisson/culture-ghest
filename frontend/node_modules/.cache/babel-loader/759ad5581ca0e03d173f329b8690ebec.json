{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nexport function checkTracksStatus(token, tracks) {\n  return __awaiter(this, void 0, void 0, function () {\n    var ids;\n    return __generator(this, function (_a) {\n      ids = Array.isArray(tracks) ? tracks : [tracks];\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/tracks/contains?ids=\".concat(ids), {\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'GET'\n      }).then(function (d) {\n        return d.json();\n      })];\n    });\n  });\n}\nexport function getDevices(token) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/player/devices\", {\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'GET'\n      }).then(function (d) {\n        return d.json();\n      })];\n    });\n  });\n}\nexport function getPlaybackState(token) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/player\", {\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'GET'\n      }).then(function (d) {\n        if (d.status === 204) {\n          return null;\n        }\n\n        return d.json();\n      })];\n    });\n  });\n}\nexport function pause(token) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/player/pause\", {\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'PUT'\n      })];\n    });\n  });\n}\nexport function play(token, _a) {\n  var context_uri = _a.context_uri,\n      deviceId = _a.deviceId,\n      _b = _a.offset,\n      offset = _b === void 0 ? 0 : _b,\n      uris = _a.uris;\n  return __awaiter(this, void 0, void 0, function () {\n    var body, isArtist, position;\n    return __generator(this, function (_c) {\n      if (context_uri) {\n        isArtist = context_uri.indexOf('artist') >= 0;\n        position = void 0;\n        /* istanbul ignore else */\n\n        if (!isArtist) {\n          position = {\n            position: offset\n          };\n        }\n\n        body = JSON.stringify({\n          context_uri: context_uri,\n          offset: position\n        });\n      } else if (Array.isArray(uris) && uris.length) {\n        body = JSON.stringify({\n          uris: uris,\n          offset: {\n            position: offset\n          }\n        });\n      }\n\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/player/play?device_id=\".concat(deviceId), {\n        body: body,\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'PUT'\n      })];\n    });\n  });\n}\nexport function previous(token) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/player/previous\", {\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'POST'\n      })];\n    });\n  });\n}\nexport function next(token) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/player/next\", {\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'POST'\n      })];\n    });\n  });\n}\nexport function removeTracks(token, tracks) {\n  return __awaiter(this, void 0, void 0, function () {\n    var ids;\n    return __generator(this, function (_a) {\n      ids = Array.isArray(tracks) ? tracks : [tracks];\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/tracks\", {\n        body: JSON.stringify(ids),\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'DELETE'\n      })];\n    });\n  });\n}\nexport function saveTracks(token, tracks) {\n  return __awaiter(this, void 0, void 0, function () {\n    var ids;\n    return __generator(this, function (_a) {\n      ids = Array.isArray(tracks) ? tracks : [tracks];\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/tracks\", {\n        body: JSON.stringify({\n          ids: ids\n        }),\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'PUT'\n      })];\n    });\n  });\n}\nexport function seek(token, position) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/player/seek?position_ms=\".concat(position), {\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'PUT'\n      })];\n    });\n  });\n}\nexport function setDevice(token, deviceId, shouldPlay) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/player\", {\n        body: JSON.stringify({\n          device_ids: [deviceId],\n          play: shouldPlay\n        }),\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'PUT'\n      })];\n    });\n  });\n}\nexport function setVolume(token, volume) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , fetch(\"https://api.spotify.com/v1/me/player/volume?volume_percent=\".concat(volume), {\n        headers: {\n          Authorization: \"Bearer \".concat(token),\n          'Content-Type': 'application/json'\n        },\n        method: 'PUT'\n      })];\n    });\n  });\n}","map":{"version":3,"mappings":"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","names":["checkTracksStatus","token","tracks","ids","Array","isArray","fetch","headers","Authorization","method","then","json","getDevices","getPlaybackState","d","status","pause","play","_a","context_uri","deviceId","_b","offset","uris","isArtist","indexOf","position","body","JSON","stringify","length","previous","next","removeTracks","saveTracks","seek","setDevice","shouldPlay","device_ids","setVolume","volume"],"sources":["/Users/cedmarth/StudentWork/JS/apps/music-app/frontend/src/node_modules/react-spotify-web-playback/src/spotify.ts"],"sourcesContent":["/* eslint-disable camelcase */\nimport { SpotifyPlayOptions } from './types';\n\nexport async function checkTracksStatus(token: string, tracks: string | string[]) {\n  const ids = Array.isArray(tracks) ? tracks : [tracks];\n\n  return fetch(`https://api.spotify.com/v1/me/tracks/contains?ids=${ids}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'GET',\n  }).then(d => d.json());\n}\n\nexport async function getDevices(token: string) {\n  return fetch(`https://api.spotify.com/v1/me/player/devices`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'GET',\n  }).then(d => d.json());\n}\n\nexport async function getPlaybackState(token: string) {\n  return fetch(`https://api.spotify.com/v1/me/player`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'GET',\n  }).then(d => {\n    if (d.status === 204) {\n      return null;\n    }\n\n    return d.json();\n  });\n}\n\nexport async function pause(token: string) {\n  return fetch(`https://api.spotify.com/v1/me/player/pause`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'PUT',\n  });\n}\n\nexport async function play(\n  token: string,\n  { context_uri, deviceId, offset = 0, uris }: SpotifyPlayOptions,\n) {\n  let body;\n\n  if (context_uri) {\n    const isArtist = context_uri.indexOf('artist') >= 0;\n    let position;\n\n    /* istanbul ignore else */\n    if (!isArtist) {\n      position = { position: offset };\n    }\n\n    body = JSON.stringify({ context_uri, offset: position });\n  } else if (Array.isArray(uris) && uris.length) {\n    body = JSON.stringify({ uris, offset: { position: offset } });\n  }\n\n  return fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\n    body,\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'PUT',\n  });\n}\n\nexport async function previous(token: string) {\n  return fetch(`https://api.spotify.com/v1/me/player/previous`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  });\n}\n\nexport async function next(token: string) {\n  return fetch(`https://api.spotify.com/v1/me/player/next`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  });\n}\n\nexport async function removeTracks(token: string, tracks: string | string[]) {\n  const ids = Array.isArray(tracks) ? tracks : [tracks];\n\n  return fetch(`https://api.spotify.com/v1/me/tracks`, {\n    body: JSON.stringify(ids),\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'DELETE',\n  });\n}\n\nexport async function saveTracks(token: string, tracks: string | string[]) {\n  const ids = Array.isArray(tracks) ? tracks : [tracks];\n\n  return fetch(`https://api.spotify.com/v1/me/tracks`, {\n    body: JSON.stringify({ ids }),\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'PUT',\n  });\n}\n\nexport async function seek(token: string, position: number) {\n  return fetch(`https://api.spotify.com/v1/me/player/seek?position_ms=${position}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'PUT',\n  });\n}\n\nexport async function setDevice(token: string, deviceId: string, shouldPlay?: boolean | undefined) {\n  return fetch(`https://api.spotify.com/v1/me/player`, {\n    body: JSON.stringify({ device_ids: [deviceId], play: shouldPlay }),\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'PUT',\n  });\n}\n\nexport async function setVolume(token: string, volume: number) {\n  return fetch(`https://api.spotify.com/v1/me/player/volume?volume_percent=${volume}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    method: 'PUT',\n  });\n}\n"]},"metadata":{},"sourceType":"module"}