{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from 'react';\nimport RangeSlider from '@gilbarbara/react-range-slider';\nimport ClickOutside from './ClickOutside';\nimport VolumeHigh from './icons/VolumeHigh';\nimport VolumeLow from './icons/VolumeLow';\nimport VolumeMute from './icons/VolumeMute';\nimport { px, styled } from '../styles';\nvar Wrapper = styled('div')({\n  'pointer-events': 'all',\n  position: 'relative',\n  zIndex: 20,\n  '> div': {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: px(12),\n    position: 'absolute',\n    right: \"-\".concat(px(3))\n  },\n  '> button': {\n    fontSize: px(26)\n  },\n  '@media (max-width: 1023px)': {\n    display: 'none'\n  }\n}, function (_a) {\n  var _b;\n\n  var style = _a.style;\n  return {\n    '> button': {\n      color: style.c\n    },\n    '> div': (_b = {\n      backgroundColor: style.bgColor,\n      boxShadow: style.altColor ? \"1px 1px 10px \".concat(style.altColor) : 'none'\n    }, _b[style.p] = '120%', _b)\n  };\n}, 'VolumeRSWP');\n\nvar Volume =\n/** @class */\nfunction (_super) {\n  __extends(Volume, _super);\n\n  function Volume(props) {\n    var _this = _super.call(this, props) || this;\n\n    Object.defineProperty(_this, \"timeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"handleClick\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        _this.setState(function (state) {\n          return {\n            isOpen: !state.isOpen\n          };\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleChangeSlider\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (_a) {\n        var y = _a.y;\n        var setVolume = _this.props.setVolume;\n        var volume = Math.round(y) / 100;\n        clearTimeout(_this.timeout);\n        _this.timeout = window.setTimeout(function () {\n          setVolume(volume);\n        }, 250);\n\n        _this.setState({\n          volume: volume\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleAfterEnd\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        setTimeout(function () {\n          _this.setState({\n            isOpen: false\n          });\n        }, 100);\n      }\n    });\n    _this.state = {\n      isOpen: false,\n      volume: props.volume\n    };\n    return _this;\n  }\n\n  Object.defineProperty(Volume.prototype, \"componentDidUpdate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (previousProps) {\n      var volumeState = this.state.volume;\n      var volume = this.props.volume;\n\n      if (previousProps.volume !== volume && volume !== volumeState) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          volume: volume\n        });\n      }\n    }\n  });\n  Object.defineProperty(Volume.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _a = this.state,\n          isOpen = _a.isOpen,\n          volume = _a.volume;\n      var _b = this.props,\n          playerPosition = _b.playerPosition,\n          _c = _b.styles,\n          altColor = _c.altColor,\n          bgColor = _c.bgColor,\n          color = _c.color,\n          title = _b.title;\n\n      var icon = _jsx(VolumeHigh, {});\n\n      if (volume === 0) {\n        icon = _jsx(VolumeMute, {});\n      } else if (volume <= 0.5) {\n        icon = _jsx(VolumeLow, {});\n      }\n\n      return _jsxs(Wrapper, __assign({\n        style: {\n          altColor: altColor,\n          bgColor: bgColor,\n          c: color,\n          p: playerPosition\n        }\n      }, {\n        children: [isOpen && _jsx(ClickOutside, __assign({\n          onClick: this.handleClick\n        }, {\n          children: _jsx(RangeSlider, {\n            axis: \"y\",\n            className: \"rrs\",\n            onAfterEnd: this.handleAfterEnd,\n            onChange: this.handleChangeSlider,\n            styles: {\n              options: {\n                thumbBorder: \"2px solid \".concat(color),\n                thumbBorderRadius: 12,\n                thumbColor: bgColor,\n                thumbSize: 12,\n                padding: 0,\n                rangeColor: altColor || '#ccc',\n                trackColor: color,\n                width: 6\n              }\n            },\n            y: volume * 100,\n            yMax: 100,\n            yMin: 0\n          })\n        })), _jsx(\"button\", __assign({\n          \"aria-label\": title,\n          onClick: !isOpen ? this.handleClick : undefined,\n          title: title,\n          type: \"button\"\n        }, {\n          children: icon\n        }))]\n      }));\n    }\n  });\n  return Volume;\n}(React.PureComponent);\n\nexport default Volume;","map":{"version":3,"mappings":"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","names":["React","RangeSlider","ClickOutside","VolumeHigh","VolumeLow","VolumeMute","px","styled","Wrapper","position","zIndex","display","flexDirection","padding","right","fontSize","_a","style","color","c","_b","backgroundColor","bgColor","boxShadow","altColor","p","__extends","props","_super","Object","_this","setState","isOpen","state","y","setVolume","volume","Math","round","clearTimeout","timeout","window","setTimeout","previousProps","volumeState","playerPosition","_c","title","icon","_jsx","_jsxs","__assign","children","onClick","handleClick","axis","className","onAfterEnd","handleAfterEnd","onChange","handleChangeSlider","styles","options","thumbBorder","thumbBorderRadius","thumbColor","thumbSize","rangeColor","trackColor","width","yMax","yMin","undefined","type","PureComponent"],"sources":["/Users/cedmarth/StudentWork/JS/apps/music-app/frontend/src/node_modules/react-spotify-web-playback/src/components/Volume.tsx"],"sourcesContent":["import * as React from 'react';\nimport RangeSlider, { RangeSliderPosition } from '@gilbarbara/react-range-slider';\n\nimport ClickOutside from './ClickOutside';\nimport VolumeHigh from './icons/VolumeHigh';\nimport VolumeLow from './icons/VolumeLow';\nimport VolumeMute from './icons/VolumeMute';\n\nimport { px, styled } from '../styles';\nimport { StyledProps, StylesOptions } from '../types/common';\n\ninterface Props {\n  playerPosition: string;\n  setVolume: (volume: number) => any;\n  styles: StylesOptions;\n  title: string;\n  volume: number;\n}\n\ninterface State {\n  isOpen: boolean;\n  volume: number;\n}\n\nconst Wrapper = styled('div')(\n  {\n    'pointer-events': 'all',\n    position: 'relative',\n    zIndex: 20,\n\n    '> div': {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: px(12),\n      position: 'absolute',\n      right: `-${px(3)}`,\n    },\n\n    '> button': {\n      fontSize: px(26),\n    },\n\n    '@media (max-width: 1023px)': {\n      display: 'none',\n    },\n  },\n  ({ style }: StyledProps) => ({\n    '> button': {\n      color: style.c,\n    },\n    '> div': {\n      backgroundColor: style.bgColor,\n      boxShadow: style.altColor ? `1px 1px 10px ${style.altColor}` : 'none',\n      [style.p]: '120%',\n    },\n  }),\n  'VolumeRSWP',\n);\n\nexport default class Volume extends React.PureComponent<Props, State> {\n  private timeout: number | undefined;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n      volume: props.volume,\n    };\n  }\n\n  public componentDidUpdate(previousProps: Props) {\n    const { volume: volumeState } = this.state;\n    const { volume } = this.props;\n\n    if (previousProps.volume !== volume && volume !== volumeState) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ volume });\n    }\n  }\n\n  private handleClick = () => {\n    this.setState(state => ({ isOpen: !state.isOpen }));\n  };\n\n  private handleChangeSlider = ({ y }: RangeSliderPosition) => {\n    const { setVolume } = this.props;\n    const volume = Math.round(y) / 100;\n\n    clearTimeout(this.timeout);\n\n    this.timeout = window.setTimeout(() => {\n      setVolume(volume);\n    }, 250);\n\n    this.setState({ volume });\n  };\n\n  private handleAfterEnd = () => {\n    setTimeout(() => {\n      this.setState({ isOpen: false });\n    }, 100);\n  };\n\n  public render() {\n    const { isOpen, volume } = this.state;\n    const {\n      playerPosition,\n      styles: { altColor, bgColor, color },\n      title,\n    } = this.props;\n    let icon = <VolumeHigh />;\n\n    if (volume === 0) {\n      icon = <VolumeMute />;\n    } else if (volume <= 0.5) {\n      icon = <VolumeLow />;\n    }\n\n    return (\n      <Wrapper style={{ altColor, bgColor, c: color, p: playerPosition }}>\n        {isOpen && (\n          <ClickOutside onClick={this.handleClick}>\n            <RangeSlider\n              axis=\"y\"\n              className=\"rrs\"\n              onAfterEnd={this.handleAfterEnd}\n              onChange={this.handleChangeSlider}\n              styles={{\n                options: {\n                  thumbBorder: `2px solid ${color}`,\n                  thumbBorderRadius: 12,\n                  thumbColor: bgColor,\n                  thumbSize: 12,\n                  padding: 0,\n                  rangeColor: altColor || '#ccc',\n                  trackColor: color,\n                  width: 6,\n                },\n              }}\n              y={volume * 100}\n              yMax={100}\n              yMin={0}\n            />\n          </ClickOutside>\n        )}\n        <button\n          aria-label={title}\n          onClick={!isOpen ? this.handleClick : undefined}\n          title={title}\n          type=\"button\"\n        >\n          {icon}\n        </button>\n      </Wrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}