{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\n/* eslint-disable camelcase */\n\nimport * as React from 'react';\nimport memoize from 'memoize-one';\nimport Actions from './components/Actions';\nimport Content from './components/Content';\nimport Controls from './components/Controls';\nimport ErrorMessage from './components/ErrorMessage';\nimport Info from './components/Info';\nimport Loader from './components/Loader';\nimport Player from './components/Player';\nimport Slider from './components/Slider';\nimport { getDevices, getPlaybackState, next, pause, play, previous, seek, setDevice, setVolume } from './spotify';\nimport { getMergedStyles } from './styles';\nimport { getLocale, getSpotifyURIType, isEqualArray, loadSpotifyPlayer, parseVolume, round, STATUS, TYPE, validateURI } from './utils';\n\nvar SpotifyWebPlayer =\n/** @class */\nfunction (_super) {\n  __extends(SpotifyWebPlayer, _super);\n\n  function SpotifyWebPlayer(props) {\n    var _this = _super.call(this, props) || this;\n\n    Object.defineProperty(_this, \"isActive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"emptyTrack\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        artists: [],\n        durationMs: 0,\n        id: '',\n        image: '',\n        name: '',\n        uri: ''\n      }\n    });\n    Object.defineProperty(_this, \"getPlayOptions\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: memoize(function (data) {\n        var playOptions = {\n          context_uri: undefined,\n          uris: undefined\n        };\n        /* istanbul ignore else */\n\n        if (data) {\n          var ids = Array.isArray(data) ? data : [data];\n\n          if (!ids.every(function (d) {\n            return validateURI(d);\n          })) {\n            // eslint-disable-next-line no-console\n            console.error('Invalid URI');\n            return playOptions;\n          }\n\n          if (ids.some(function (d) {\n            return getSpotifyURIType(d) === 'track';\n          })) {\n            if (!ids.every(function (d) {\n              return getSpotifyURIType(d) === 'track';\n            })) {\n              // eslint-disable-next-line no-console\n              console.warn(\"You can't mix tracks URIs with other types\");\n            }\n\n            playOptions.uris = ids.filter(function (d) {\n              return validateURI(d) && getSpotifyURIType(d) === 'track';\n            });\n          } else {\n            if (ids.length > 1) {\n              // eslint-disable-next-line no-console\n              console.warn(\"Albums, Artists, Playlists and Podcasts can't have multiple URIs\");\n            } // eslint-disable-next-line prefer-destructuring\n\n\n            playOptions.context_uri = ids[0];\n          }\n        }\n\n        return playOptions;\n      })\n    });\n    Object.defineProperty(_this, \"hasNewToken\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"player\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"playerProgressInterval\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"playerSyncInterval\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"ref\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: /*#__PURE__*/React.createRef()\n    });\n    Object.defineProperty(_this, \"seekUpdateInterval\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 100\n    });\n    Object.defineProperty(_this, \"styles\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"syncTimeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"handleChangeRange\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (position) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var track, _a, callback, token, progress, percentage, state, error_1;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                track = this.state.track;\n                _a = this.props, callback = _a.callback, token = _a.token;\n                progress = 0;\n                _b.label = 1;\n\n              case 1:\n                _b.trys.push([1, 8,, 9]);\n\n                percentage = position / 100;\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 3];\n                progress = Math.round(track.durationMs * percentage);\n                return [4\n                /*yield*/\n                , seek(token, progress)];\n\n              case 2:\n                _b.sent();\n\n                this.updateState({\n                  position: position,\n                  progressMs: progress\n                });\n                return [3\n                /*break*/\n                , 7];\n\n              case 3:\n                if (!this.player) return [3\n                /*break*/\n                , 7];\n                return [4\n                /*yield*/\n                , this.player.getCurrentState()];\n\n              case 4:\n                state = _b.sent();\n                if (!state) return [3\n                /*break*/\n                , 6];\n                progress = Math.round(state.track_window.current_track.duration_ms * percentage);\n                return [4\n                /*yield*/\n                , this.player.seek(progress)];\n\n              case 5:\n                _b.sent();\n\n                this.updateState({\n                  position: position,\n                  progressMs: progress\n                });\n                return [3\n                /*break*/\n                , 7];\n\n              case 6:\n                this.updateState({\n                  position: 0\n                });\n                _b.label = 7;\n\n              case 7:\n                if (callback) {\n                  callback(__assign(__assign({}, this.state), {\n                    type: TYPE.PROGRESS\n                  }));\n                }\n\n                return [3\n                /*break*/\n                , 9];\n\n              case 8:\n                error_1 = _b.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_1);\n                return [3\n                /*break*/\n                , 9];\n\n              case 9:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleClickTogglePlay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var isActive, error_2;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                isActive = this.state.isActive;\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , this.togglePlay(!this.isExternalPlayer && !isActive)];\n\n              case 2:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                error_2 = _a.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_2);\n                return [3\n                /*break*/\n                , 4];\n\n              case 4:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleClickPrevious\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var token, error_3;\n\n          var _this = this;\n\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 5,, 6]);\n\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 2];\n                token = this.props.token;\n                return [4\n                /*yield*/\n                , previous(token)];\n\n              case 1:\n                _a.sent();\n\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 300);\n                return [3\n                /*break*/\n                , 4];\n\n              case 2:\n                if (!this.player) return [3\n                /*break*/\n                , 4];\n                return [4\n                /*yield*/\n                , this.player.previousTrack()];\n\n              case 3:\n                _a.sent();\n\n                _a.label = 4;\n\n              case 4:\n                return [3\n                /*break*/\n                , 6];\n\n              case 5:\n                error_3 = _a.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_3);\n                return [3\n                /*break*/\n                , 6];\n\n              case 6:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleClickNext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var token, error_4;\n\n          var _this = this;\n\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 5,, 6]);\n\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 2];\n                token = this.props.token;\n                return [4\n                /*yield*/\n                , next(token)];\n\n              case 1:\n                _a.sent();\n\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 300);\n                return [3\n                /*break*/\n                , 4];\n\n              case 2:\n                if (!this.player) return [3\n                /*break*/\n                , 4];\n                return [4\n                /*yield*/\n                , this.player.nextTrack()];\n\n              case 3:\n                _a.sent();\n\n                _a.label = 4;\n\n              case 4:\n                return [3\n                /*break*/\n                , 6];\n\n              case 5:\n                error_4 = _a.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_4);\n                return [3\n                /*break*/\n                , 6];\n\n              case 6:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleClickDevice\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (deviceId) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var isUnsupported, _a, autoPlay, persistDeviceSelection, token, player, error_5;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                isUnsupported = this.state.isUnsupported;\n                _a = this.props, autoPlay = _a.autoPlay, persistDeviceSelection = _a.persistDeviceSelection, token = _a.token;\n                this.updateState({\n                  currentDeviceId: deviceId\n                });\n                _b.label = 1;\n\n              case 1:\n                _b.trys.push([1, 7,, 8]);\n\n                return [4\n                /*yield*/\n                , setDevice(token, deviceId)];\n\n              case 2:\n                _b.sent();\n                /* istanbul ignore else */\n\n\n                if (persistDeviceSelection) {\n                  sessionStorage.setItem('rswpDeviceId', deviceId);\n                }\n\n                if (!isUnsupported) return [3\n                /*break*/\n                , 6];\n                return [4\n                /*yield*/\n                , this.syncDevice()];\n\n              case 3:\n                _b.sent();\n\n                return [4\n                /*yield*/\n                , getPlaybackState(token)];\n\n              case 4:\n                player = _b.sent();\n                if (!(player && !player.is_playing && autoPlay)) return [3\n                /*break*/\n                , 6];\n                return [4\n                /*yield*/\n                , this.togglePlay(true)];\n\n              case 5:\n                _b.sent();\n\n                _b.label = 6;\n\n              case 6:\n                return [3\n                /*break*/\n                , 8];\n\n              case 7:\n                error_5 = _b.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_5);\n                return [3\n                /*break*/\n                , 8];\n\n              case 8:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleFavoriteStatusChange\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (status) {\n        var isSaved = _this.state.isSaved;\n\n        _this.updateState({\n          isSaved: status\n        });\n        /* istanbul ignore else */\n\n\n        if (isSaved !== status) {\n          _this.handleCallback(__assign(__assign({}, _this.state), {\n            isSaved: status,\n            type: TYPE.FAVORITE\n          }));\n        }\n      }\n    });\n    Object.defineProperty(_this, \"handlePlayerErrors\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (type, message) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var status, isPlaybackError, isInitializationError, nextStatus, devices, token;\n\n          var _a;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                status = this.state.status;\n                isPlaybackError = type === 'playback_error';\n                isInitializationError = type === 'initialization_error';\n                nextStatus = status;\n                devices = [];\n                if (!(this.player && !isPlaybackError)) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , this.player.disconnect()];\n\n              case 1:\n                _b.sent();\n\n                _b.label = 2;\n\n              case 2:\n                if (!isInitializationError) return [3\n                /*break*/\n                , 4];\n                nextStatus = STATUS.UNSUPPORTED;\n                token = this.props.token;\n                return [4\n                /*yield*/\n                , getDevices(token)];\n\n              case 3:\n                _a = _b.sent().devices, devices = _a === void 0 ? [] : _a;\n                _b.label = 4;\n\n              case 4:\n                if (!isInitializationError && !isPlaybackError) {\n                  nextStatus = STATUS.ERROR;\n                }\n\n                this.updateState({\n                  devices: devices,\n                  error: message,\n                  errorType: type,\n                  isInitializing: false,\n                  isUnsupported: isInitializationError,\n                  status: nextStatus\n                });\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handlePlayerStateChanges\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (state) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var paused, position, _a, _b, album, artists, duration_ms, id, name_1, uri, next_tracks, previous_tracks, isPlaying, volume, track, trackState, error_6;\n\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                _c.trys.push([0, 6,, 7]);\n\n                if (!state) return [3\n                /*break*/\n                , 2];\n                paused = state.paused, position = state.position, _a = state.track_window, _b = _a.current_track, album = _b.album, artists = _b.artists, duration_ms = _b.duration_ms, id = _b.id, name_1 = _b.name, uri = _b.uri, next_tracks = _a.next_tracks, previous_tracks = _a.previous_tracks;\n                isPlaying = !paused;\n                return [4\n                /*yield*/\n                , this.player.getVolume()];\n\n              case 1:\n                volume = _c.sent();\n                track = {\n                  artists: artists,\n                  durationMs: duration_ms,\n                  id: id,\n                  image: this.setAlbumImage(album),\n                  name: name_1,\n                  uri: uri\n                };\n                trackState = void 0;\n\n                if (position === 0) {\n                  trackState = {\n                    nextTracks: next_tracks,\n                    position: 0,\n                    previousTracks: previous_tracks,\n                    track: track\n                  };\n                }\n\n                this.updateState(__assign({\n                  error: '',\n                  errorType: '',\n                  isActive: true,\n                  isPlaying: isPlaying,\n                  progressMs: position,\n                  volume: round(volume)\n                }, trackState));\n                return [3\n                /*break*/\n                , 5];\n\n              case 2:\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 4];\n                return [4\n                /*yield*/\n                , this.syncDevice()];\n\n              case 3:\n                _c.sent();\n\n                return [3\n                /*break*/\n                , 5];\n\n              case 4:\n                this.updateState({\n                  isActive: false,\n                  isPlaying: false,\n                  nextTracks: [],\n                  position: 0,\n                  previousTracks: [],\n                  track: {\n                    artists: '',\n                    durationMs: 0,\n                    id: '',\n                    image: '',\n                    name: '',\n                    uri: ''\n                  }\n                });\n                _c.label = 5;\n\n              case 5:\n                return [3\n                /*break*/\n                , 7];\n\n              case 6:\n                error_6 = _c.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_6);\n                return [3\n                /*break*/\n                , 7];\n\n              case 7:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handlePlayerStatus\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (_a) {\n        var device_id = _a.device_id;\n        return __awaiter(_this, void 0, void 0, function () {\n          var _b, currentDeviceId, devices;\n\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.initializeDevices(device_id)];\n\n              case 1:\n                _b = _c.sent(), currentDeviceId = _b.currentDeviceId, devices = _b.devices;\n                this.updateState({\n                  currentDeviceId: currentDeviceId,\n                  deviceId: device_id,\n                  devices: devices,\n                  isInitializing: false,\n                  status: device_id ? STATUS.READY : STATUS.IDLE\n                });\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"handleToggleMagnify\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        var magnifySliderOnHover = _this.props.magnifySliderOnHover;\n\n        if (magnifySliderOnHover) {\n          _this.updateState(function (previousState) {\n            return {\n              isMagnified: !previousState.isMagnified\n            };\n          });\n        }\n      }\n    });\n    Object.defineProperty(_this, \"initializePlayer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        var volume = _this.state.volume;\n        var _a = _this.props,\n            _b = _a.name,\n            name = _b === void 0 ? 'Spotify Web Player' : _b,\n            token = _a.token;\n\n        if (!window.Spotify) {\n          return;\n        }\n\n        _this.updateState({\n          isInitializing: true\n        });\n\n        _this.player = new window.Spotify.Player({\n          getOAuthToken: function (callback) {\n            callback(token);\n          },\n          name: name,\n          volume: volume\n        });\n\n        _this.player.addListener('ready', _this.handlePlayerStatus);\n\n        _this.player.addListener('not_ready', _this.handlePlayerStatus);\n\n        _this.player.addListener('player_state_changed', _this.handlePlayerStateChanges);\n\n        _this.player.addListener('initialization_error', function (error) {\n          return _this.handlePlayerErrors('initialization_error', error.message);\n        });\n\n        _this.player.addListener('authentication_error', function (error) {\n          return _this.handlePlayerErrors('authentication_error', error.message);\n        });\n\n        _this.player.addListener('account_error', function (error) {\n          return _this.handlePlayerErrors('account_error', error.message);\n        });\n\n        _this.player.addListener('playback_error', function (error) {\n          return _this.handlePlayerErrors('playback_error', error.message);\n        });\n\n        _this.player.connect();\n      }\n    }); // eslint-disable-next-line class-methods-use-this\n\n    Object.defineProperty(_this, \"setAlbumImage\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (album) {\n        var width = Math.min.apply(Math, __spreadArray([], __read(album.images.map(function (d) {\n          return d.width || 0;\n        })), false));\n        var thumb = album.images.find(function (d) {\n          return d.width === width;\n        }) || {};\n        return thumb.url;\n      }\n    });\n    Object.defineProperty(_this, \"setExternalDevice\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (id) {\n        _this.updateState({\n          currentDeviceId: id,\n          isPlaying: true\n        });\n      }\n    });\n    Object.defineProperty(_this, \"setVolume\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (volume) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var token;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                token = this.props.token;\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 3];\n                return [4\n                /*yield*/\n                , setVolume(token, Math.round(volume * 100))];\n\n              case 1:\n                _a.sent();\n\n                return [4\n                /*yield*/\n                , this.syncDevice()];\n\n              case 2:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 5];\n\n              case 3:\n                if (!this.player) return [3\n                /*break*/\n                , 5];\n                return [4\n                /*yield*/\n                , this.player.setVolume(volume)];\n\n              case 4:\n                _a.sent();\n\n                _a.label = 5;\n\n              case 5:\n                this.updateState({\n                  volume: volume\n                });\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"syncDevice\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var deviceId, token, player, track, error_7, state;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!this.isActive) {\n                  return [2\n                  /*return*/\n                  ];\n                }\n\n                deviceId = this.state.deviceId;\n                token = this.props.token;\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , getPlaybackState(token)];\n\n              case 2:\n                player = _a.sent();\n                track = this.emptyTrack;\n\n                if (!player) {\n                  throw new Error('No player');\n                }\n                /* istanbul ignore else */\n\n\n                if (player.item) {\n                  track = {\n                    artists: player.item.artists,\n                    durationMs: player.item.duration_ms,\n                    id: player.item.id,\n                    image: this.setAlbumImage(player.item.album),\n                    name: player.item.name,\n                    uri: player.item.uri\n                  };\n                }\n\n                this.updateState({\n                  error: '',\n                  errorType: '',\n                  isActive: true,\n                  isPlaying: player.is_playing,\n                  nextTracks: [],\n                  previousTracks: [],\n                  progressMs: player.item ? player.progress_ms : 0,\n                  status: STATUS.READY,\n                  track: track,\n                  volume: parseVolume(player.device.volume_percent)\n                });\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                error_7 = _a.sent();\n                state = {\n                  isActive: false,\n                  isPlaying: false,\n                  position: 0,\n                  track: this.emptyTrack\n                };\n\n                if (deviceId) {\n                  this.updateState(__assign({\n                    currentDeviceId: deviceId\n                  }, state));\n                  return [2\n                  /*return*/\n                  ];\n                }\n\n                this.updateState(__assign({\n                  error: error_7.message,\n                  errorType: 'player_status',\n                  status: STATUS.ERROR\n                }, state));\n                return [3\n                /*break*/\n                , 4];\n\n              case 4:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"toggleOffset\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, currentDeviceId, isPlaying, _b, offset, token, uris;\n\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                _a = this.state, currentDeviceId = _a.currentDeviceId, isPlaying = _a.isPlaying;\n                _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;\n                if (!(isPlaying && typeof offset === 'number' && Array.isArray(uris))) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , play(token, {\n                  deviceId: currentDeviceId,\n                  offset: offset,\n                  uris: uris\n                })];\n\n              case 1:\n                _c.sent();\n\n                _c.label = 2;\n\n              case 2:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"togglePlay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (init) {\n        if (init === void 0) {\n          init = false;\n        }\n\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, currentDeviceId, isPlaying, needsUpdate, _b, offset, token, uris, shouldInitialize, playOptions, playerState, error_8;\n\n          var _this = this;\n\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                _a = this.state, currentDeviceId = _a.currentDeviceId, isPlaying = _a.isPlaying, needsUpdate = _a.needsUpdate;\n                _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;\n                shouldInitialize = init || needsUpdate;\n                playOptions = this.getPlayOptions(uris);\n                _c.label = 1;\n\n              case 1:\n                _c.trys.push([1, 13,, 14]);\n\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 6];\n                if (!!isPlaying) return [3\n                /*break*/\n                , 3];\n                return [4\n                /*yield*/\n                , play(token, __assign({\n                  deviceId: currentDeviceId,\n                  offset: offset\n                }, shouldInitialize ? playOptions : undefined))];\n\n              case 2:\n                _c.sent();\n\n                return [3\n                /*break*/\n                , 5];\n\n              case 3:\n                return [4\n                /*yield*/\n                , pause(token)];\n\n              case 4:\n                _c.sent();\n\n                this.updateState({\n                  isPlaying: false\n                });\n                _c.label = 5;\n\n              case 5:\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 300);\n                return [3\n                /*break*/\n                , 12];\n\n              case 6:\n                if (!this.player) return [3\n                /*break*/\n                , 12];\n                return [4\n                /*yield*/\n                , this.player.getCurrentState()];\n\n              case 7:\n                playerState = _c.sent();\n                return [4\n                /*yield*/\n                , this.player.activateElement()];\n\n              case 8:\n                _c.sent();\n\n                if (!(!playerState && !!(playOptions.context_uri || playOptions.uris) || shouldInitialize && playerState && playerState.paused)) return [3\n                /*break*/\n                , 10];\n                return [4\n                /*yield*/\n                , play(token, __assign({\n                  deviceId: currentDeviceId,\n                  offset: offset\n                }, shouldInitialize ? playOptions : undefined))];\n\n              case 9:\n                _c.sent();\n\n                return [3\n                /*break*/\n                , 12];\n\n              case 10:\n                return [4\n                /*yield*/\n                , this.player.togglePlay()];\n\n              case 11:\n                _c.sent();\n\n                _c.label = 12;\n\n              case 12:\n                if (needsUpdate) {\n                  this.updateState({\n                    needsUpdate: false\n                  });\n                }\n\n                return [3\n                /*break*/\n                , 14];\n\n              case 13:\n                error_8 = _c.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_8);\n                return [3\n                /*break*/\n                , 14];\n\n              case 14:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"updateSeekBar\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, progressMs, track, position, state, progress, position, error_9;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                if (!this.isActive) {\n                  return [2\n                  /*return*/\n                  ];\n                }\n\n                _a = this.state, progressMs = _a.progressMs, track = _a.track;\n                _b.label = 1;\n\n              case 1:\n                _b.trys.push([1, 5,, 6]);\n\n                if (!this.isExternalPlayer) return [3\n                /*break*/\n                , 2];\n                position = progressMs / track.durationMs;\n                position = Number(((Number.isFinite(position) ? position : 0) * 100).toFixed(1));\n                this.updateState({\n                  position: position,\n                  progressMs: progressMs + this.seekUpdateInterval\n                });\n                return [3\n                /*break*/\n                , 4];\n\n              case 2:\n                if (!this.player) return [3\n                /*break*/\n                , 4];\n                return [4\n                /*yield*/\n                , this.player.getCurrentState()];\n\n              case 3:\n                state = _b.sent();\n                /* istanbul ignore else */\n\n                if (state) {\n                  progress = state.position;\n                  position = Number((progress / state.track_window.current_track.duration_ms * 100).toFixed(1));\n                  this.updateState({\n                    position: position,\n                    progressMs: progress + this.seekUpdateInterval\n                  });\n                }\n\n                _b.label = 4;\n\n              case 4:\n                return [3\n                /*break*/\n                , 6];\n\n              case 5:\n                error_9 = _b.sent(); // eslint-disable-next-line no-console\n\n                console.error(error_9);\n                return [3\n                /*break*/\n                , 6];\n\n              case 6:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }\n    });\n    Object.defineProperty(_this, \"updateState\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (state) {\n        if (state === void 0) {\n          state = {};\n        }\n\n        if (!_this.isActive) {\n          return;\n        }\n\n        _this.setState(state);\n      }\n    });\n    _this.state = {\n      currentDeviceId: '',\n      deviceId: '',\n      devices: [],\n      error: '',\n      errorType: '',\n      isActive: false,\n      isInitializing: false,\n      isMagnified: false,\n      isPlaying: false,\n      isSaved: false,\n      isUnsupported: false,\n      needsUpdate: false,\n      nextTracks: [],\n      playerPosition: 'bottom',\n      position: 0,\n      previousTracks: [],\n      progressMs: 0,\n      status: STATUS.IDLE,\n      track: _this.emptyTrack,\n      volume: parseVolume(props.initialVolume) || 1\n    };\n    _this.styles = getMergedStyles(props.styles);\n    return _this;\n  }\n\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"componentDidMount\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, function () {\n        var _b, top;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              this.isActive = true;\n              _b = (((_a = this.ref.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) || {}).top, top = _b === void 0 ? 0 : _b;\n              this.updateState({\n                playerPosition: top > window.innerHeight / 2 ? 'bottom' : 'top',\n                status: STATUS.INITIALIZING\n              });\n\n              if (!window.onSpotifyWebPlaybackSDKReady) {\n                window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n              } else {\n                this.initializePlayer();\n              }\n\n              return [4\n              /*yield*/\n              , loadSpotifyPlayer()];\n\n            case 1:\n              _c.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"componentDidUpdate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (previousProps, previousState) {\n      return __awaiter(this, void 0, void 0, function () {\n        var _a, currentDeviceId, deviceId, error, isInitializing, isPlaying, status, track, _b, autoPlay, offset, playProp, showSaveIcon, syncExternalDevice, token, uris, isReady, changedURIs, playOptions, canPlay, shouldPlay, player;\n\n        var _this = this;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.state, currentDeviceId = _a.currentDeviceId, deviceId = _a.deviceId, error = _a.error, isInitializing = _a.isInitializing, isPlaying = _a.isPlaying, status = _a.status, track = _a.track;\n              _b = this.props, autoPlay = _b.autoPlay, offset = _b.offset, playProp = _b.play, showSaveIcon = _b.showSaveIcon, syncExternalDevice = _b.syncExternalDevice, token = _b.token, uris = _b.uris;\n              isReady = previousState.status !== STATUS.READY && status === STATUS.READY;\n              changedURIs = Array.isArray(uris) ? !isEqualArray(previousProps.uris, uris) : previousProps.uris !== uris;\n              playOptions = this.getPlayOptions(uris);\n              canPlay = !!currentDeviceId && !!(playOptions.context_uri || playOptions.uris);\n              shouldPlay = changedURIs && isPlaying || !!(isReady && (autoPlay || playProp));\n              if (!(canPlay && shouldPlay)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , play(token, __assign({\n                deviceId: currentDeviceId,\n                offset: offset\n              }, playOptions))];\n\n            case 1:\n              _c.sent();\n              /* istanbul ignore else */\n\n\n              if (!isPlaying) {\n                this.updateState({\n                  isPlaying: true\n                });\n              }\n\n              if (this.isExternalPlayer) {\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 600);\n              }\n\n              return [3\n              /*break*/\n              , 3];\n\n            case 2:\n              if (changedURIs && !isPlaying) {\n                this.updateState({\n                  needsUpdate: true\n                });\n              }\n\n              _c.label = 3;\n\n            case 3:\n              if (previousState.status !== status) {\n                this.handleCallback(__assign(__assign({}, this.state), {\n                  type: TYPE.STATUS\n                }));\n              }\n\n              if (!(previousState.currentDeviceId !== currentDeviceId && currentDeviceId)) return [3\n              /*break*/\n              , 6];\n\n              if (!isReady) {\n                this.handleCallback(__assign(__assign({}, this.state), {\n                  type: TYPE.DEVICE\n                }));\n              }\n\n              return [4\n              /*yield*/\n              , this.toggleSyncInterval(this.isExternalPlayer)];\n\n            case 4:\n              _c.sent();\n\n              return [4\n              /*yield*/\n              , this.updateSeekBar()];\n\n            case 5:\n              _c.sent();\n\n              _c.label = 6;\n\n            case 6:\n              if (previousState.track.id !== track.id && track.id) {\n                this.handleCallback(__assign(__assign({}, this.state), {\n                  type: TYPE.TRACK\n                }));\n\n                if (showSaveIcon) {\n                  this.updateState({\n                    isSaved: false\n                  });\n                }\n              }\n\n              if (!(previousState.isPlaying !== isPlaying)) return [3\n              /*break*/\n              , 8];\n              this.toggleProgressBar();\n              return [4\n              /*yield*/\n              , this.toggleSyncInterval(this.isExternalPlayer)];\n\n            case 7:\n              _c.sent();\n\n              this.handleCallback(__assign(__assign({}, this.state), {\n                type: TYPE.PLAYER\n              }));\n              _c.label = 8;\n\n            case 8:\n              if (token && previousProps.token !== token) {\n                this.hasNewToken = true;\n\n                if (!isInitializing) {\n                  this.initializePlayer();\n                } else {\n                  this.hasNewToken = true;\n                }\n              }\n\n              if (!(previousProps.play !== playProp && playProp !== isPlaying)) return [3\n              /*break*/\n              , 10];\n              return [4\n              /*yield*/\n              , this.togglePlay(!track.id)];\n\n            case 9:\n              _c.sent();\n\n              _c.label = 10;\n\n            case 10:\n              if (!(previousProps.offset !== offset)) return [3\n              /*break*/\n              , 12];\n              return [4\n              /*yield*/\n              , this.toggleOffset()];\n\n            case 11:\n              _c.sent();\n\n              _c.label = 12;\n\n            case 12:\n              if (!(previousState.isInitializing && !isInitializing)) return [3\n              /*break*/\n              , 14];\n\n              if (error === 'authentication_error' && this.hasNewToken) {\n                this.hasNewToken = false;\n                this.initializePlayer();\n              }\n\n              if (!(syncExternalDevice && !uris)) return [3\n              /*break*/\n              , 14];\n              return [4\n              /*yield*/\n              , getPlaybackState(token)];\n\n            case 13:\n              player = _c.sent();\n              /* istanbul ignore else */\n\n              if (player && player.is_playing && player.device.id !== deviceId) {\n                this.setExternalDevice(player.device.id);\n              }\n\n              _c.label = 14;\n\n            case 14:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"componentWillUnmount\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this.isActive = false;\n              if (!this.player) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this.player.disconnect()];\n\n            case 1:\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              clearInterval(this.playerSyncInterval);\n              clearInterval(this.playerProgressInterval);\n              clearTimeout(this.syncTimeout);\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"isExternalPlayer\", {\n    get: function () {\n      var _a = this.state,\n          currentDeviceId = _a.currentDeviceId,\n          deviceId = _a.deviceId,\n          status = _a.status;\n      return currentDeviceId && currentDeviceId !== deviceId || status === STATUS.UNSUPPORTED;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"handleCallback\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (state) {\n      var callback = this.props.callback;\n\n      if (callback) {\n        callback(state);\n      }\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"initializeDevices\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (id) {\n      return __awaiter(this, void 0, void 0, function () {\n        var _a, persistDeviceSelection, token, devices, currentDeviceId, savedDeviceId_1;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = this.props, persistDeviceSelection = _a.persistDeviceSelection, token = _a.token;\n              return [4\n              /*yield*/\n              , getDevices(token)];\n\n            case 1:\n              devices = _b.sent().devices;\n              currentDeviceId = id;\n\n              if (persistDeviceSelection) {\n                savedDeviceId_1 = sessionStorage.getItem('rswpDeviceId');\n                /* istanbul ignore else */\n\n                if (!savedDeviceId_1 || !devices.some(function (d) {\n                  return d.id === savedDeviceId_1;\n                })) {\n                  sessionStorage.setItem('rswpDeviceId', currentDeviceId);\n                } else {\n                  currentDeviceId = savedDeviceId_1;\n                }\n              }\n\n              return [2\n              /*return*/\n              , {\n                currentDeviceId: currentDeviceId,\n                devices: devices\n              }];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"toggleSyncInterval\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (shouldSync) {\n      return __awaiter(this, void 0, void 0, function () {\n        var syncExternalDeviceInterval, error_10;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              syncExternalDeviceInterval = this.props.syncExternalDeviceInterval;\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 4,, 5]);\n\n              if (!(this.isExternalPlayer && shouldSync && !this.playerSyncInterval)) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , this.syncDevice()];\n\n            case 2:\n              _a.sent();\n\n              clearInterval(this.playerSyncInterval);\n              this.playerSyncInterval = window.setInterval(this.syncDevice, syncExternalDeviceInterval * 1000);\n              _a.label = 3;\n\n            case 3:\n              if ((!shouldSync || !this.isExternalPlayer) && this.playerSyncInterval) {\n                clearInterval(this.playerSyncInterval);\n                this.playerSyncInterval = undefined;\n              }\n\n              return [3\n              /*break*/\n              , 5];\n\n            case 4:\n              error_10 = _a.sent(); // eslint-disable-next-line no-console\n\n              console.error(error_10);\n              return [3\n              /*break*/\n              , 5];\n\n            case 5:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"toggleProgressBar\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var isPlaying = this.state.isPlaying;\n      /* istanbul ignore else */\n\n      if (isPlaying) {\n        /* istanbul ignore else */\n        if (!this.playerProgressInterval) {\n          this.playerProgressInterval = window.setInterval(this.updateSeekBar, this.seekUpdateInterval);\n        }\n      } else if (this.playerProgressInterval) {\n        clearInterval(this.playerProgressInterval);\n        this.playerProgressInterval = undefined;\n      }\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _a = this.state,\n          currentDeviceId = _a.currentDeviceId,\n          deviceId = _a.deviceId,\n          devices = _a.devices,\n          error = _a.error,\n          errorType = _a.errorType,\n          isActive = _a.isActive,\n          isMagnified = _a.isMagnified,\n          isPlaying = _a.isPlaying,\n          isUnsupported = _a.isUnsupported,\n          nextTracks = _a.nextTracks,\n          playerPosition = _a.playerPosition,\n          position = _a.position,\n          previousTracks = _a.previousTracks,\n          status = _a.status,\n          track = _a.track,\n          volume = _a.volume;\n      var _b = this.props,\n          locale = _b.locale,\n          name = _b.name,\n          showSaveIcon = _b.showSaveIcon,\n          token = _b.token,\n          updateSavedStatus = _b.updateSavedStatus;\n      var isReady = [STATUS.READY, STATUS.UNSUPPORTED].indexOf(status) >= 0;\n      var isPlaybackError = errorType === 'playback_error';\n      var localeMerged = getLocale(locale);\n\n      var output = _jsx(Loader, {\n        styles: this.styles\n      });\n\n      var info;\n\n      if (isPlaybackError) {\n        info = _jsx(\"p\", {\n          children: error\n        });\n      }\n\n      if (isReady) {\n        /* istanbul ignore else */\n        if (!info) {\n          info = _jsx(Info, {\n            isActive: isActive,\n            locale: localeMerged,\n            onFavoriteStatusChange: this.handleFavoriteStatusChange,\n            showSaveIcon: showSaveIcon,\n            styles: this.styles,\n            token: token,\n            track: track,\n            updateSavedStatus: updateSavedStatus\n          });\n        }\n\n        output = _jsxs(_Fragment, {\n          children: [_jsx(\"div\", {\n            children: info\n          }), _jsx(Controls, {\n            isExternalDevice: this.isExternalPlayer,\n            isPlaying: isPlaying,\n            locale: localeMerged,\n            nextTracks: nextTracks,\n            onClickNext: this.handleClickNext,\n            onClickPrevious: this.handleClickPrevious,\n            onClickTogglePlay: this.handleClickTogglePlay,\n            previousTracks: previousTracks,\n            styles: this.styles\n          }), _jsx(Actions, {\n            currentDeviceId: currentDeviceId,\n            deviceId: deviceId,\n            devices: devices,\n            isDevicesOpen: isUnsupported && !deviceId,\n            locale: localeMerged,\n            onClickDevice: this.handleClickDevice,\n            playerPosition: playerPosition,\n            setVolume: this.setVolume,\n            styles: this.styles,\n            volume: volume\n          })]\n        });\n      }\n\n      if (status === STATUS.ERROR) {\n        output = _jsxs(ErrorMessage, __assign({\n          styles: this.styles\n        }, {\n          children: [name, \": \", error]\n        }));\n      }\n\n      return _jsxs(Player, __assign({\n        ref: this.ref,\n        styles: this.styles\n      }, {\n        children: [isReady && _jsx(Slider, {\n          isMagnified: isMagnified,\n          onChangeRange: this.handleChangeRange,\n          onToggleMagnify: this.handleToggleMagnify,\n          position: position,\n          styles: this.styles\n        }), _jsx(Content, __assign({\n          styles: this.styles\n        }, {\n          children: output\n        }))]\n      }));\n    }\n  }); // eslint-disable-next-line react/static-property-placement\n\n  Object.defineProperty(SpotifyWebPlayer, \"defaultProps\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: {\n      magnifySliderOnHover: false,\n      name: 'Spotify Web Player',\n      showSaveIcon: false,\n      syncExternalDeviceInterval: 5,\n      syncExternalDevice: false\n    }\n  });\n  return SpotifyWebPlayer;\n}(React.PureComponent);\n\nexport * from './types';\nexport default SpotifyWebPlayer;\nexport { STATUS, TYPE } from './utils';","map":{"version":3,"mappings":"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","names":["React","memoize","Actions","Content","Controls","ErrorMessage","Info","Loader","Player","Slider","getDevices","getPlaybackState","next","pause","play","previous","seek","setDevice","setVolume","getMergedStyles","getLocale","getSpotifyURIType","isEqualArray","loadSpotifyPlayer","parseVolume","round","STATUS","TYPE","validateURI","__extends","props","_super","Object","artists","durationMs","id","image","name","uri","data","playOptions","context_uri","undefined","uris","ids","Array","isArray","every","d","console","error","some","warn","filter","length","createRef","position","track","state","_a","callback","token","progress","percentage","isExternalPlayer","Math","_b","updateState","progressMs","player","getCurrentState","track_window","current_track","duration_ms","type","PROGRESS","error_1","isActive","togglePlay","error_2","syncTimeout","window","setTimeout","_this","syncDevice","previousTrack","error_3","nextTrack","error_4","deviceId","isUnsupported","autoPlay","persistDeviceSelection","currentDeviceId","sessionStorage","setItem","is_playing","error_5","status","isSaved","handleCallback","__assign","FAVORITE","message","isPlaybackError","isInitializationError","nextStatus","devices","disconnect","UNSUPPORTED","ERROR","errorType","isInitializing","paused","album","name_1","next_tracks","previous_tracks","isPlaying","getVolume","volume","_c","setAlbumImage","trackState","nextTracks","previousTracks","error_6","device_id","initializeDevices","READY","IDLE","magnifySliderOnHover","previousState","isMagnified","Spotify","getOAuthToken","addListener","handlePlayerStatus","handlePlayerStateChanges","handlePlayerErrors","connect","width","min","apply","__spreadArray","images","map","thumb","find","url","emptyTrack","Error","item","progress_ms","device","volume_percent","error_7","offset","init","needsUpdate","shouldInitialize","getPlayOptions","playerState","activateElement","error_8","Number","isFinite","toFixed","seekUpdateInterval","error_9","setState","playerPosition","initialVolume","styles","ref","current","getBoundingClientRect","top","innerHeight","INITIALIZING","onSpotifyWebPlaybackSDKReady","initializePlayer","previousProps","playProp","showSaveIcon","syncExternalDevice","isReady","changedURIs","canPlay","shouldPlay","DEVICE","toggleSyncInterval","updateSeekBar","TRACK","toggleProgressBar","PLAYER","hasNewToken","toggleOffset","setExternalDevice","clearInterval","playerSyncInterval","playerProgressInterval","clearTimeout","SpotifyWebPlayer","savedDeviceId_1","getItem","shouldSync","syncExternalDeviceInterval","setInterval","error_10","locale","updateSavedStatus","indexOf","localeMerged","output","_jsx","info","children","onFavoriteStatusChange","handleFavoriteStatusChange","_jsxs","isExternalDevice","onClickNext","handleClickNext","onClickPrevious","handleClickPrevious","onClickTogglePlay","handleClickTogglePlay","isDevicesOpen","onClickDevice","handleClickDevice","onChangeRange","handleChangeRange","onToggleMagnify","handleToggleMagnify","PureComponent"],"sources":["/Users/cedmarth/StudentWork/JS/apps/music-app/frontend/src/node_modules/react-spotify-web-playback/src/index.tsx"],"sourcesContent":["/* eslint-disable camelcase */\nimport * as React from 'react';\nimport memoize from 'memoize-one';\n\nimport Actions from './components/Actions';\nimport Content from './components/Content';\nimport Controls from './components/Controls';\nimport ErrorMessage from './components/ErrorMessage';\nimport Info from './components/Info';\nimport Loader from './components/Loader';\nimport Player from './components/Player';\nimport Slider from './components/Slider';\nimport {\n  getDevices,\n  getPlaybackState,\n  next,\n  pause,\n  play,\n  previous,\n  seek,\n  setDevice,\n  setVolume,\n} from './spotify';\nimport { getMergedStyles } from './styles';\nimport {\n  CallbackState,\n  PlayOptions,\n  Props,\n  SpotifyDevice,\n  SpotifyPlayerCallback,\n  SpotifyPlayerStatus,\n  State,\n  StylesOptions,\n} from './types';\nimport {\n  getLocale,\n  getSpotifyURIType,\n  isEqualArray,\n  loadSpotifyPlayer,\n  parseVolume,\n  round,\n  STATUS,\n  TYPE,\n  validateURI,\n} from './utils';\n\nimport { Spotify } from '../global';\n\nclass SpotifyWebPlayer extends React.PureComponent<Props, State> {\n  private isActive = false;\n  private emptyTrack = {\n    artists: [] as Spotify.Artist[],\n    durationMs: 0,\n    id: '',\n    image: '',\n    name: '',\n    uri: '',\n  };\n\n  private getPlayOptions = memoize((data): PlayOptions => {\n    const playOptions: PlayOptions = {\n      context_uri: undefined,\n      uris: undefined,\n    };\n\n    /* istanbul ignore else */\n    if (data) {\n      const ids = Array.isArray(data) ? data : [data];\n\n      if (!ids.every(d => validateURI(d))) {\n        // eslint-disable-next-line no-console\n        console.error('Invalid URI');\n\n        return playOptions;\n      }\n\n      if (ids.some(d => getSpotifyURIType(d) === 'track')) {\n        if (!ids.every(d => getSpotifyURIType(d) === 'track')) {\n          // eslint-disable-next-line no-console\n          console.warn(\"You can't mix tracks URIs with other types\");\n        }\n\n        playOptions.uris = ids.filter(d => validateURI(d) && getSpotifyURIType(d) === 'track');\n      } else {\n        if (ids.length > 1) {\n          // eslint-disable-next-line no-console\n          console.warn(\"Albums, Artists, Playlists and Podcasts can't have multiple URIs\");\n        }\n\n        // eslint-disable-next-line prefer-destructuring\n        playOptions.context_uri = ids[0];\n      }\n    }\n\n    return playOptions;\n  });\n\n  private hasNewToken = false;\n  private player?: Spotify.Player;\n  private playerProgressInterval?: number;\n  private playerSyncInterval?: number;\n  private ref = React.createRef<HTMLDivElement>();\n  private seekUpdateInterval = 100;\n  private readonly styles: StylesOptions;\n  private syncTimeout?: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      currentDeviceId: '',\n      deviceId: '',\n      devices: [],\n      error: '',\n      errorType: '',\n      isActive: false,\n      isInitializing: false,\n      isMagnified: false,\n      isPlaying: false,\n      isSaved: false,\n      isUnsupported: false,\n      needsUpdate: false,\n      nextTracks: [],\n      playerPosition: 'bottom',\n      position: 0,\n      previousTracks: [],\n      progressMs: 0,\n      status: STATUS.IDLE,\n      track: this.emptyTrack,\n      volume: parseVolume(props.initialVolume) || 1,\n    };\n\n    this.styles = getMergedStyles(props.styles);\n  }\n\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    magnifySliderOnHover: false,\n    name: 'Spotify Web Player',\n    showSaveIcon: false,\n    syncExternalDeviceInterval: 5,\n    syncExternalDevice: false,\n  };\n\n  public async componentDidMount() {\n    this.isActive = true;\n    const { top = 0 } = this.ref.current?.getBoundingClientRect() || {};\n\n    this.updateState({\n      playerPosition: top > window.innerHeight / 2 ? 'bottom' : 'top',\n      status: STATUS.INITIALIZING,\n    });\n\n    if (!window.onSpotifyWebPlaybackSDKReady) {\n      window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    } else {\n      this.initializePlayer();\n    }\n\n    await loadSpotifyPlayer();\n  }\n\n  public async componentDidUpdate(previousProps: Props, previousState: State) {\n    const { currentDeviceId, deviceId, error, isInitializing, isPlaying, status, track } =\n      this.state;\n    const {\n      autoPlay,\n      offset,\n      play: playProp,\n      showSaveIcon,\n      syncExternalDevice,\n      token,\n      uris,\n    } = this.props;\n    const isReady = previousState.status !== STATUS.READY && status === STATUS.READY;\n    const changedURIs = Array.isArray(uris)\n      ? !isEqualArray(previousProps.uris, uris)\n      : previousProps.uris !== uris;\n    const playOptions = this.getPlayOptions(uris);\n\n    const canPlay = !!currentDeviceId && !!(playOptions.context_uri || playOptions.uris);\n    const shouldPlay = (changedURIs && isPlaying) || !!(isReady && (autoPlay || playProp));\n\n    if (canPlay && shouldPlay) {\n      await play(token, { deviceId: currentDeviceId, offset, ...playOptions });\n\n      /* istanbul ignore else */\n      if (!isPlaying) {\n        this.updateState({ isPlaying: true });\n      }\n\n      if (this.isExternalPlayer) {\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 600);\n      }\n    } else if (changedURIs && !isPlaying) {\n      this.updateState({ needsUpdate: true });\n    }\n\n    if (previousState.status !== status) {\n      this.handleCallback({\n        ...this.state,\n        type: TYPE.STATUS,\n      });\n    }\n\n    if (previousState.currentDeviceId !== currentDeviceId && currentDeviceId) {\n      if (!isReady) {\n        this.handleCallback({\n          ...this.state,\n          type: TYPE.DEVICE,\n        });\n      }\n\n      await this.toggleSyncInterval(this.isExternalPlayer);\n      await this.updateSeekBar();\n    }\n\n    if (previousState.track.id !== track.id && track.id) {\n      this.handleCallback({\n        ...this.state,\n        type: TYPE.TRACK,\n      });\n\n      if (showSaveIcon) {\n        this.updateState({ isSaved: false });\n      }\n    }\n\n    if (previousState.isPlaying !== isPlaying) {\n      this.toggleProgressBar();\n      await this.toggleSyncInterval(this.isExternalPlayer);\n\n      this.handleCallback({\n        ...this.state,\n        type: TYPE.PLAYER,\n      });\n    }\n\n    if (token && previousProps.token !== token) {\n      this.hasNewToken = true;\n\n      if (!isInitializing) {\n        this.initializePlayer();\n      } else {\n        this.hasNewToken = true;\n      }\n    }\n\n    if (previousProps.play !== playProp && playProp !== isPlaying) {\n      await this.togglePlay(!track.id);\n    }\n\n    if (previousProps.offset !== offset) {\n      await this.toggleOffset();\n    }\n\n    if (previousState.isInitializing && !isInitializing) {\n      if (error === 'authentication_error' && this.hasNewToken) {\n        this.hasNewToken = false;\n        this.initializePlayer();\n      }\n\n      if (syncExternalDevice && !uris) {\n        const player: SpotifyPlayerStatus = await getPlaybackState(token);\n\n        /* istanbul ignore else */\n        if (player && player.is_playing && player.device.id !== deviceId) {\n          this.setExternalDevice(player.device.id);\n        }\n      }\n    }\n  }\n\n  public async componentWillUnmount() {\n    this.isActive = false;\n\n    /* istanbul ignore else */\n    if (this.player) {\n      await this.player.disconnect();\n    }\n\n    clearInterval(this.playerSyncInterval);\n    clearInterval(this.playerProgressInterval);\n    clearTimeout(this.syncTimeout);\n  }\n\n  private get isExternalPlayer(): boolean {\n    const { currentDeviceId, deviceId, status } = this.state;\n\n    return (currentDeviceId && currentDeviceId !== deviceId) || status === STATUS.UNSUPPORTED;\n  }\n\n  private handleCallback(state: CallbackState): void {\n    const { callback } = this.props;\n\n    if (callback) {\n      callback(state);\n    }\n  }\n\n  private handleChangeRange = async (position: number) => {\n    const { track } = this.state;\n    const { callback, token } = this.props;\n    let progress = 0;\n\n    try {\n      const percentage = position / 100;\n\n      if (this.isExternalPlayer) {\n        progress = Math.round(track.durationMs * percentage);\n        await seek(token, progress);\n\n        this.updateState({\n          position,\n          progressMs: progress,\n        });\n      } else if (this.player) {\n        const state = await this.player.getCurrentState();\n\n        if (state) {\n          progress = Math.round(state.track_window.current_track.duration_ms * percentage);\n          await this.player.seek(progress);\n\n          this.updateState({\n            position,\n            progressMs: progress,\n          });\n        } else {\n          this.updateState({ position: 0 });\n        }\n      }\n\n      if (callback) {\n        callback({\n          ...this.state,\n          type: TYPE.PROGRESS,\n        });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickTogglePlay = async () => {\n    const { isActive } = this.state;\n\n    try {\n      await this.togglePlay(!this.isExternalPlayer && !isActive);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickPrevious = async () => {\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        const { token } = this.props;\n\n        await previous(token);\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        await this.player.previousTrack();\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickNext = async () => {\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        const { token } = this.props;\n\n        await next(token);\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        await this.player.nextTrack();\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickDevice = async (deviceId: string) => {\n    const { isUnsupported } = this.state;\n    const { autoPlay, persistDeviceSelection, token } = this.props;\n\n    this.updateState({ currentDeviceId: deviceId });\n\n    try {\n      await setDevice(token, deviceId);\n\n      /* istanbul ignore else */\n      if (persistDeviceSelection) {\n        sessionStorage.setItem('rswpDeviceId', deviceId);\n      }\n\n      /* istanbul ignore else */\n      if (isUnsupported) {\n        await this.syncDevice();\n\n        const player: SpotifyPlayerStatus = await getPlaybackState(token);\n\n        if (player && !player.is_playing && autoPlay) {\n          await this.togglePlay(true);\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleFavoriteStatusChange = (status: boolean) => {\n    const { isSaved } = this.state;\n\n    this.updateState({ isSaved: status });\n\n    /* istanbul ignore else */\n    if (isSaved !== status) {\n      this.handleCallback({\n        ...this.state,\n        isSaved: status,\n        type: TYPE.FAVORITE,\n      });\n    }\n  };\n\n  private handlePlayerErrors = async (type: string, message: string) => {\n    const { status } = this.state;\n    const isPlaybackError = type === 'playback_error';\n    const isInitializationError = type === 'initialization_error';\n    let nextStatus = status;\n    let devices: SpotifyDevice[] = [];\n\n    if (this.player && !isPlaybackError) {\n      await this.player.disconnect();\n    }\n\n    if (isInitializationError) {\n      nextStatus = STATUS.UNSUPPORTED;\n\n      const { token } = this.props;\n\n      ({ devices = [] } = await getDevices(token));\n    }\n\n    if (!isInitializationError && !isPlaybackError) {\n      nextStatus = STATUS.ERROR;\n    }\n\n    this.updateState({\n      devices,\n      error: message,\n      errorType: type,\n      isInitializing: false,\n      isUnsupported: isInitializationError,\n      status: nextStatus,\n    });\n  };\n\n  private handlePlayerStateChanges = async (state: Spotify.PlaybackState) => {\n    try {\n      /* istanbul ignore else */\n      if (state) {\n        const {\n          paused,\n          position,\n          track_window: {\n            current_track: { album, artists, duration_ms, id, name, uri },\n            next_tracks,\n            previous_tracks,\n          },\n        } = state;\n\n        const isPlaying = !paused;\n        const volume = await this.player!.getVolume();\n        const track = {\n          artists,\n          durationMs: duration_ms,\n          id,\n          image: this.setAlbumImage(album),\n          name,\n          uri,\n        };\n        let trackState;\n\n        if (position === 0) {\n          trackState = {\n            nextTracks: next_tracks,\n            position: 0,\n            previousTracks: previous_tracks,\n            track,\n          };\n        }\n\n        this.updateState({\n          error: '',\n          errorType: '',\n          isActive: true,\n          isPlaying,\n          progressMs: position,\n          volume: round(volume),\n          ...trackState,\n        });\n      } else if (this.isExternalPlayer) {\n        await this.syncDevice();\n      } else {\n        this.updateState({\n          isActive: false,\n          isPlaying: false,\n          nextTracks: [],\n          position: 0,\n          previousTracks: [],\n          track: {\n            artists: '',\n            durationMs: 0,\n            id: '',\n            image: '',\n            name: '',\n            uri: '',\n          },\n        });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handlePlayerStatus = async ({ device_id }: Spotify.WebPlaybackInstance) => {\n    const { currentDeviceId, devices } = await this.initializeDevices(device_id);\n\n    this.updateState({\n      currentDeviceId,\n      deviceId: device_id,\n      devices,\n      isInitializing: false,\n      status: device_id ? STATUS.READY : STATUS.IDLE,\n    });\n  };\n\n  private handleToggleMagnify = () => {\n    const { magnifySliderOnHover } = this.props;\n\n    if (magnifySliderOnHover) {\n      this.updateState((previousState: State) => {\n        return { isMagnified: !previousState.isMagnified };\n      });\n    }\n  };\n\n  private async initializeDevices(id: string) {\n    const { persistDeviceSelection, token } = this.props;\n    const { devices } = await getDevices(token);\n    let currentDeviceId = id;\n\n    if (persistDeviceSelection) {\n      const savedDeviceId = sessionStorage.getItem('rswpDeviceId');\n\n      /* istanbul ignore else */\n      if (!savedDeviceId || !devices.some((d: SpotifyDevice) => d.id === savedDeviceId)) {\n        sessionStorage.setItem('rswpDeviceId', currentDeviceId);\n      } else {\n        currentDeviceId = savedDeviceId;\n      }\n    }\n\n    return { currentDeviceId, devices };\n  }\n\n  private initializePlayer = () => {\n    const { volume } = this.state;\n    const { name = 'Spotify Web Player', token } = this.props;\n\n    if (!window.Spotify) {\n      return;\n    }\n\n    this.updateState({ isInitializing: true });\n\n    this.player = new window.Spotify.Player({\n      getOAuthToken: (callback: SpotifyPlayerCallback) => {\n        callback(token);\n      },\n      name,\n      volume,\n    });\n\n    this.player.addListener('ready', this.handlePlayerStatus);\n    this.player.addListener('not_ready', this.handlePlayerStatus);\n    this.player.addListener('player_state_changed', this.handlePlayerStateChanges);\n    this.player.addListener('initialization_error', error =>\n      this.handlePlayerErrors('initialization_error', error.message),\n    );\n    this.player.addListener('authentication_error', error =>\n      this.handlePlayerErrors('authentication_error', error.message),\n    );\n    this.player.addListener('account_error', error =>\n      this.handlePlayerErrors('account_error', error.message),\n    );\n    this.player.addListener('playback_error', error =>\n      this.handlePlayerErrors('playback_error', error.message),\n    );\n\n    this.player.connect();\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  private setAlbumImage = (album: Spotify.Album): string => {\n    const width = Math.min(...album.images.map(d => d.width || 0));\n    const thumb: Spotify.Image = album.images.find(d => d.width === width) || ({} as Spotify.Image);\n\n    return thumb.url;\n  };\n\n  private setExternalDevice = (id: string) => {\n    this.updateState({ currentDeviceId: id, isPlaying: true });\n  };\n\n  private setVolume = async (volume: number) => {\n    const { token } = this.props;\n\n    /* istanbul ignore else */\n    if (this.isExternalPlayer) {\n      await setVolume(token, Math.round(volume * 100));\n      await this.syncDevice();\n    } else if (this.player) {\n      await this.player.setVolume(volume);\n    }\n\n    this.updateState({ volume });\n  };\n\n  private syncDevice = async () => {\n    if (!this.isActive) {\n      return;\n    }\n\n    const { deviceId } = this.state;\n    const { token } = this.props;\n\n    try {\n      const player: SpotifyPlayerStatus = await getPlaybackState(token);\n      let track = this.emptyTrack;\n\n      if (!player) {\n        throw new Error('No player');\n      }\n\n      /* istanbul ignore else */\n      if (player.item) {\n        track = {\n          artists: player.item.artists,\n          durationMs: player.item.duration_ms,\n          id: player.item.id,\n          image: this.setAlbumImage(player.item.album),\n          name: player.item.name,\n          uri: player.item.uri,\n        };\n      }\n\n      this.updateState({\n        error: '',\n        errorType: '',\n        isActive: true,\n        isPlaying: player.is_playing,\n        nextTracks: [],\n        previousTracks: [],\n        progressMs: player.item ? player.progress_ms : 0,\n        status: STATUS.READY,\n        track,\n        volume: parseVolume(player.device.volume_percent),\n      });\n    } catch (error: any) {\n      const state = {\n        isActive: false,\n        isPlaying: false,\n        position: 0,\n        track: this.emptyTrack,\n      };\n\n      if (deviceId) {\n        this.updateState({\n          currentDeviceId: deviceId,\n          ...state,\n        });\n\n        return;\n      }\n\n      this.updateState({\n        error: error.message,\n        errorType: 'player_status',\n        status: STATUS.ERROR,\n        ...state,\n      });\n    }\n  };\n\n  private async toggleSyncInterval(shouldSync: boolean) {\n    const { syncExternalDeviceInterval } = this.props;\n\n    try {\n      if (this.isExternalPlayer && shouldSync && !this.playerSyncInterval) {\n        await this.syncDevice();\n\n        clearInterval(this.playerSyncInterval);\n        this.playerSyncInterval = window.setInterval(\n          this.syncDevice,\n          syncExternalDeviceInterval! * 1000,\n        );\n      }\n\n      if ((!shouldSync || !this.isExternalPlayer) && this.playerSyncInterval) {\n        clearInterval(this.playerSyncInterval);\n        this.playerSyncInterval = undefined;\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n\n  private toggleProgressBar() {\n    const { isPlaying } = this.state;\n\n    /* istanbul ignore else */\n    if (isPlaying) {\n      /* istanbul ignore else */\n      if (!this.playerProgressInterval) {\n        this.playerProgressInterval = window.setInterval(\n          this.updateSeekBar,\n          this.seekUpdateInterval,\n        );\n      }\n    } else if (this.playerProgressInterval) {\n      clearInterval(this.playerProgressInterval);\n      this.playerProgressInterval = undefined;\n    }\n  }\n\n  private toggleOffset = async () => {\n    const { currentDeviceId, isPlaying } = this.state;\n    const { offset, token, uris } = this.props;\n\n    if (isPlaying && typeof offset === 'number' && Array.isArray(uris)) {\n      await play(token, { deviceId: currentDeviceId, offset, uris });\n    }\n  };\n\n  private togglePlay = async (init = false) => {\n    const { currentDeviceId, isPlaying, needsUpdate } = this.state;\n    const { offset, token, uris } = this.props;\n    const shouldInitialize = init || needsUpdate;\n    const playOptions = this.getPlayOptions(uris);\n\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        if (!isPlaying) {\n          await play(token, {\n            deviceId: currentDeviceId,\n            offset,\n            ...(shouldInitialize ? playOptions : undefined),\n          });\n        } else {\n          await pause(token);\n\n          this.updateState({ isPlaying: false });\n        }\n\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        const playerState = await this.player.getCurrentState();\n\n        await this.player.activateElement();\n\n        // eslint-disable-next-line unicorn/prefer-ternary\n        if (\n          (!playerState && !!(playOptions.context_uri || playOptions.uris)) ||\n          (shouldInitialize && playerState && playerState.paused)\n        ) {\n          await play(token, {\n            deviceId: currentDeviceId,\n            offset,\n            ...(shouldInitialize ? playOptions : undefined),\n          });\n        } else {\n          await this.player.togglePlay();\n        }\n      }\n\n      if (needsUpdate) {\n        this.updateState({ needsUpdate: false });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private updateSeekBar = async () => {\n    if (!this.isActive) {\n      return;\n    }\n\n    const { progressMs, track } = this.state;\n\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        let position = progressMs / track.durationMs;\n\n        position = Number(((Number.isFinite(position) ? position : 0) * 100).toFixed(1));\n\n        this.updateState({\n          position,\n          progressMs: progressMs + this.seekUpdateInterval,\n        });\n      } else if (this.player) {\n        const state = await this.player.getCurrentState();\n\n        /* istanbul ignore else */\n        if (state) {\n          const progress = state.position;\n          const position = Number(\n            ((progress / state.track_window.current_track.duration_ms) * 100).toFixed(1),\n          );\n\n          this.updateState({\n            position,\n            progressMs: progress + this.seekUpdateInterval,\n          });\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private updateState = (state = {}) => {\n    if (!this.isActive) {\n      return;\n    }\n\n    this.setState(state);\n  };\n\n  public render() {\n    const {\n      currentDeviceId,\n      deviceId,\n      devices,\n      error,\n      errorType,\n      isActive,\n      isMagnified,\n      isPlaying,\n      isUnsupported,\n      nextTracks,\n      playerPosition,\n      position,\n      previousTracks,\n      status,\n      track,\n      volume,\n    } = this.state;\n    const { locale, name, showSaveIcon, token, updateSavedStatus } = this.props;\n    const isReady = [STATUS.READY, STATUS.UNSUPPORTED].indexOf(status) >= 0;\n    const isPlaybackError = errorType === 'playback_error';\n    const localeMerged = getLocale(locale);\n\n    let output = <Loader styles={this.styles!} />;\n    let info;\n\n    if (isPlaybackError) {\n      info = <p>{error}</p>;\n    }\n\n    if (isReady) {\n      /* istanbul ignore else */\n      if (!info) {\n        info = (\n          <Info\n            isActive={isActive}\n            locale={localeMerged}\n            onFavoriteStatusChange={this.handleFavoriteStatusChange}\n            showSaveIcon={showSaveIcon!}\n            styles={this.styles}\n            token={token}\n            track={track}\n            updateSavedStatus={updateSavedStatus}\n          />\n        );\n      }\n\n      output = (\n        <>\n          <div>{info}</div>\n          <Controls\n            isExternalDevice={this.isExternalPlayer}\n            isPlaying={isPlaying}\n            locale={localeMerged}\n            nextTracks={nextTracks}\n            onClickNext={this.handleClickNext}\n            onClickPrevious={this.handleClickPrevious}\n            onClickTogglePlay={this.handleClickTogglePlay}\n            previousTracks={previousTracks}\n            styles={this.styles}\n          />\n          <Actions\n            currentDeviceId={currentDeviceId}\n            deviceId={deviceId}\n            devices={devices}\n            isDevicesOpen={isUnsupported && !deviceId}\n            locale={localeMerged}\n            onClickDevice={this.handleClickDevice}\n            playerPosition={playerPosition}\n            setVolume={this.setVolume}\n            styles={this.styles}\n            volume={volume}\n          />\n        </>\n      );\n    }\n\n    if (status === STATUS.ERROR) {\n      output = (\n        <ErrorMessage styles={this.styles}>\n          {name}: {error}\n        </ErrorMessage>\n      );\n    }\n\n    return (\n      <Player ref={this.ref} styles={this.styles}>\n        {isReady && (\n          <Slider\n            isMagnified={isMagnified}\n            onChangeRange={this.handleChangeRange}\n            onToggleMagnify={this.handleToggleMagnify}\n            position={position}\n            styles={this.styles!}\n          />\n        )}\n        <Content styles={this.styles}>{output}</Content>\n      </Player>\n    );\n  }\n}\n\nexport * from './types';\n\nexport default SpotifyWebPlayer;\n\nexport { STATUS, TYPE } from './utils';\n"]},"metadata":{},"sourceType":"module"}