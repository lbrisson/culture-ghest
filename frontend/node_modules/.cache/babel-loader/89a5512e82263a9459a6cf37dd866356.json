{"ast":null,"code":"import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1); // TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\n\n\nexport default function createWithBsPrefix(prefix) {\n  var _s = $RefreshSig$();\n\n  let {\n    displayName = pascalCase(prefix),\n    Component,\n    defaultProps\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  const BsComponent = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_s((_ref, ref) => {\n    _s();\n\n    let {\n      className,\n      bsPrefix,\n      as: Tag = Component || 'div',\n      ...props\n    } = _ref;\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  }, \"/lLG16sCipXV/rkSG6wNNA8iEGo=\", false, function () {\n    return [useBootstrapPrefix];\n  })), \"/lLG16sCipXV/rkSG6wNNA8iEGo=\", false, function () {\n    return [useBootstrapPrefix];\n  });\n\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","map":{"version":3,"names":["classNames","camelize","React","useBootstrapPrefix","jsx","_jsx","pascalCase","str","toUpperCase","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","forwardRef","ref","className","bsPrefix","as","Tag","props","resolvedPrefix"],"sources":["/Users/cedmarth/StudentWork/JS/apps/music-app/frontend/src/node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"sourcesContent":["import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,MAAMC,UAAU,GAAGC,GAAG,IAAIA,GAAG,CAAC,CAAD,CAAH,CAAOC,WAAP,KAAuBP,QAAQ,CAACM,GAAD,CAAR,CAAcE,KAAd,CAAoB,CAApB,CAAjD,C,CAEA;;;AACA,eAAe,SAASC,kBAAT,CAA4BC,MAA5B,EAIP;EAAA;;EAAA,IAJ2C;IACjDC,WAAW,GAAGN,UAAU,CAACK,MAAD,CADyB;IAEjDE,SAFiD;IAGjDC;EAHiD,CAI3C,uEAAJ,EAAI;;EACN,MAAMC,WAAW,GAAG,aAAH,iBAAgBb,KAAK,CAACc,UAAN,IAAiB,OAK/CC,GAL+C,KAKvC;IAAA;;IAAA,IALwC;MACjDC,SADiD;MAEjDC,QAFiD;MAGjDC,EAAE,EAAEC,GAAG,GAAGR,SAAS,IAAI,KAH0B;MAIjD,GAAGS;IAJ8C,CAKxC;IACT,MAAMC,cAAc,GAAGpB,kBAAkB,CAACgB,QAAD,EAAWR,MAAX,CAAzC;IACA,OAAO,aAAaN,IAAI,CAACgB,GAAD,EAAM;MAC5BJ,GAAG,EAAEA,GADuB;MAE5BC,SAAS,EAAElB,UAAU,CAACkB,SAAD,EAAYK,cAAZ,CAFO;MAG5B,GAAGD;IAHyB,CAAN,CAAxB;EAKD,CAZgC;IAAA,QAMRnB,kBANQ;EAAA,GAAhB;IAAA,QAMQA,kBANR;EAAA,EAAjB;;EAaAY,WAAW,CAACD,YAAZ,GAA2BA,YAA3B;EACAC,WAAW,CAACH,WAAZ,GAA0BA,WAA1B;EACA,OAAOG,WAAP;AACD"},"metadata":{},"sourceType":"module"}